#!/usr/bin/env python

import csv
import datetime
import StringIO

from ftplib import FTP

from lib import characters, cache
from lib import evedb

def main():
    api = characters.api()
    grd = characters.corp(cacheHandler=cache.FileCache("/tmp/forcer/eveapicache/"))
    gmt = grd.MarketOrders()
    orders = []
    charnames = {}
    for row in gmt.orders:
        if row.charID not in charnames:
            charinfo = api.eve.CharacterInfo(characterID=row.charID)
            charnames[row.charID] = charinfo.characterName
    grdcs = grd.CorporationSheet()
    wallet = dict((row.accountKey, row.description)
                  for row in grdcs.walletDivisions)
    for order in gmt.orders:
        if order.orderState != 0:
            continue
        orders.append([charnames[order.charID],
                       stationid2name(order.stationID),
                       order.volEntered,
                       order.volRemaining,
                       order.minVolume,
                       typeid2name(order.typeID),
                       order.range,
                       wallet[order.accountKey],
                       order.duration,
                       order.escrow,
                       order.price,
                       order.bid,
                       order.issued
                       ])
    orders.sort(lambda a, b: cmp(a[1], b[1]))
    s = StringIO.StringIO()
    w = csv.writer(s)
    w.writerows(orders)
    s.seek(0)

    f = file("/home/forcer/.private.txt")
    lines = [line.strip().split(":") for line in f.readlines()]
    pws = dict((s, (u, p)) for (s, u, p) in lines)
    (u, p) = pws['deliveries']
    ftp = FTP('www.electusmatari.com')
    ftp.login(u, p)
    ftp.storbinary("STOR grd-marketorders.txt", s)
    ftp.quit()

_typeid2name = None
def typeid2name(typeid):
    global _typeid2name
    if _typeid2name is None:
        db = evedb.connect()
        c = db.cursor()
        c.execute("SELECT typeid, typename FROM ccp.invtypes")
        _typeid2name = dict(c.fetchall())
    return _typeid2name[typeid]

_stationid2name = None
def stationid2name(stationid):
    global _stationid2name
    if _stationid2name is None:
        db = evedb.connect()
        c = db.cursor()
        c.execute("SELECT stationid, stationname FROM ccp.stastations")
        _stationid2name = dict(c.fetchall())
    return _stationid2name[stationid]

if __name__ == '__main__':
    main()

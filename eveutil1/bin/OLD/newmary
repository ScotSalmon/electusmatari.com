#!/usr/bin/env python

import datetime
import os
import pickle

from lib import killinfo

DATAFILE = "/home/forcer/.mary"
KMDIR = "/home/forcer/Depot/killboards/militia/amarr/"
KNOWNFILE = "/home/forcer/amarr-militia.txt"
OLDFILE = "/home/forcer/amarr-militia-old.txt"

def main():
    d = Data()
    load_kills(d)
    d.save()
    oneweek = datetime.datetime.utcnow() - datetime.timedelta(days=7)
    known = [line.strip() for line in file(KNOWNFILE)]
    old = [line.strip() for line in file(OLDFILE)]

    new = []
    recheck = []
    for (corp, seen) in d.knowncorps():
        if corp not in known and corp not in old:
            new.append(corp)
        elif corp in old and seen > oneweek:
            recheck.append(corp)

    new.sort(lambda a, b: cmp(a.lower(), b.lower()))
    recheck.sort(lambda a, b: cmp(a.lower(), b.lower()))
    if len(new) > 0:
        print "New Corporations"
        print "================"
        for name in new:
            print name
    if len(new) > 0 and len(recheck) > 0:
        print
    if len(recheck) > 0:
        print "Old Corps Active in the Last 7 Days"
        print "==================================="
        for name in recheck:
            print name

def load_kills(d):
    for km in os.listdir(KMDIR):
        if km.startswith("."):
            continue
        kmfile = os.path.join(KMDIR, km)
        if d.is_knownkill(kmfile):
            continue
        ki = killinfo.load(file(kmfile))
        if ki.victim.get("Faction", "") == 'Amarr Empire':
            d.addcorp(ki.victim["Corp"], ki.timestamp)
        for inv in ki.involved:
            if inv.get("Faction", "") == 'Amarr Empire':
                d.addcorp(inv["Corp"], ki.timestamp)
        d.add_knownkill(kmfile)

class Data(object):
    def __init__(self, datafile=DATAFILE):
        self.datafile = datafile
        if os.path.exists(datafile):
            (self.corps, self.mails) = pickle.load(file(datafile))
        else:
            (self.corps, self.mails) = ({}, {})

    def save(self):
        pickle.dump((self.corps, self.mails),
                    file(self.datafile, "w"))

    def is_knownkill(self, name):
        return name in self.mails

    def add_knownkill(self, name):
        self.mails[name] = True

    def addcorp(self, name, seen):
        if name not in self.corps:
            self.corps[name] = seen
        else:
            self.corps[name] = max(self.corps[name],
                                   seen)

    def knowncorps(self):
        return self.corps.items()
    

if __name__ == '__main__':
    main()

import csv
import datetime

from collections import defaultdict

import gnuplot

def main():
    gp = gnuplot.Gnuplot("PRVTR Kills in the Republic", "Time", "Kills",
                         "/home/forcer/public_html/prvtr.png")
    gp.add_arrow("2009-11-01", "PRVTR dec", pos=0.85)
    gp.add_arrow("2009-11-09", "Counterdec", pos=0.75)
    days = 1
    gp.mplot([("Kills (all shifts)", ravg([(date, s1+s2+s3)
                                           for (date, s1, s2, s3)
                                           in getkills()],
                                          days)),
              ("Kills (1st)", ravg([(date, s1)
                                    for (date, s1, s2, s3)
                                    in getkills()],
                                   days)),
              ("Kills (2nd)", ravg([(date, s2)
                                    for (date, s1, s2, s3)
                                    in getkills()],
                                   days)),
              ("Kills (3rd)", ravg([(date, s3)
                                    for (date, s1, s2, s3)
                                    in getkills()],
                                   days))
              ])

def getkills():
    kl = list(csv.reader(file("/home/forcer/public_html/prvtr-kills-no-em.txt")))
    kd = defaultdict(lambda: defaultdict(lambda: 0))
    for day, region, s1, s2, s3 in kl:
        if region in ['Heimatar', 'Metropolis', 'Molden Heath']:
            kd[day][1] += int(s1)
            kd[day][2] += int(s2)
            kd[day][3] += int(s3)
    kills = [(date, shifts[1], shifts[2], shifts[3])
             for (date, shifts) in kd.items()]
    kills.sort()
    return kills

def ravg(seq, n):
    return zip([x[0] for x in seq],
               raverage([x[1] for x in seq], n))

def raverage(seq, n):
    return [sum(seq[max(0, (i-n)):i]) / float(n)
            for i in range(0, len(seq))]


if __name__ == '__main__':
    main()

#!/usr/bin/env python

from optparse import OptionParser
from lib import evedb

db = evedb.connect()

def main():
   parser = OptionParser()
   parser.add_option("-t", "--type", dest="type",
                     default=None,
                     help="Tower typename to use")
   (options, args) = parser.parse_args()

   c = db.cursor()
   c.execute(TOWER_SQL)
   tower = dict((typename.lower(), (typename, pg, cpu))
                for (typename, pg, cpu) in c.fetchall())

   c.execute(MODULE_SQL)
   modules = dict((typename.lower(), (typename, pg, cpu))
                  for (typename, pg, cpu) in c.fetchall())

   used_pg = 0
   used_tf = 0
   used_modules = []

   for mod_name in args:
      (mod_realname, pg, cpu) = modules.get(mod_name.lower())
      used_pg += pg
      used_tf += cpu
      used_modules.append((mod_realname, pg, cpu))
      
   if options.type is None:
      for (tower_type, pg, tf) in tower:

TOWER_SQL = """
SELECT t.typename,
       COALESCE(ta_pg.valueint, ta_pg.valuefloat),
       COALESCE(ta_tf.valueint, ta_tf.valuefloat)
FROM invtypes t
     INNER JOIN invgroups g
       ON t.groupid = g.groupid
     INNER JOIN invcategories c
       ON g.categoryid = c.categoryid

     INNER JOIN dgmtypeattributes ta_pg
       ON t.typeid = ta_pg.typeid
     INNER JOIN dgmattributetypes at_pg
       ON ta_pg.attributeid = at_pg.attributeid

     INNER JOIN dgmtypeattributes ta_tf
       ON t.typeid = ta_tf.typeid
     INNER JOIN dgmattributetypes at_tf
       ON ta_tf.attributeid = at_tf.attributeid

WHERE g.groupname = 'Control Tower'
  AND t.published = 1
  AND at_pg.attributename = 'powerOutput'
  AND at_tf.attributename = 'cpuOutput'
;
"""

MODULE_SQL = """
SELECT t.typename AS typename,
       COALESCE(ta_pg.valueint, ta_pg.valuefloat) AS pg,
       COALESCE(ta_tf.valueint, ta_tf.valuefloat) AS cpu
FROM invtypes t
     INNER JOIN invgroups g
       ON t.groupid = g.groupid
     INNER JOIN invcategories c
       ON g.categoryid = c.categoryid

     INNER JOIN dgmtypeattributes ta_pg
       ON t.typeid = ta_pg.typeid
     INNER JOIN dgmattributetypes at_pg
       ON ta_pg.attributeid = at_pg.attributeid

     INNER JOIN dgmtypeattributes ta_tf
       ON t.typeid = ta_tf.typeid
     INNER JOIN dgmattributetypes at_tf
       ON ta_tf.attributeid = at_tf.attributeid

WHERE c.categoryname = 'Structure'
  AND t.published = 1
  AND at_pg.attributename = 'power'
  AND at_tf.attributename = 'cpu'
;
"""

GET_ATTRIBUTE = """
SELECT COALESCE(ta.valueint, ta.valuefloat)
FROM invtypes t
     INNER JOIN dgmtypeattributes ta
       ON t.typeid = ta.typeid
     INNER JOIN dgmattributetypes at
       ON ta.attributeid = at.attributeid
WHERE t.typename = %s
  AND at.attributename = %s
"""

# 'damageMultiplier' 'speed' 'maxRange'
# 'falloff' 'chargeSize'

if __name__ == '__main__':
   main()

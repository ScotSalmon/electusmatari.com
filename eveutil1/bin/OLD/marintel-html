#!/usr/bin/env python

import csv
import sys

from lib import characters
from lib.util import humane

def main():
    api = characters.api()
    fws = api.eve.FacWarStats()
    amarr_size = [x.pilots for x in fws.factions
                  if x.factionName == 'Amarr Empire'][0]

    r = csv.reader(sys.stdin)
    totalsize = 0
    print '<html><body><table border="1" style="border-collapse: collapse;"><tr><th>Corp</th><th>New</th><th>Standing</th><th>Size</th><th>Last Seen</th><th>MatarKB</th><th>MaryKB</th><th>FWK</th><th>FWVP</th></tr>'
    for (corp, corpid, st, size, lastseen, matarikbrank, marykbrank, fwk, fwvp) in r:
        st = int(st)
        size = int(size)
        matarikbrank = int(marykbrank)
        marykbrank = int(marykbrank)
        fwk = int(fwk)
        fwvp = int(fwvp)

        totalsize += size
        print '<tr>'
        # Corp
        print ('<td><a href="showinfo:2//%s">%s</a></td>'
               % (corpid, corp))
        # New standing
        if size >= 10 or max(matarikbrank, marykbrank, fwk, fwvp) > 0:
            if st == -10:
                newstanding = ""
            else:
                newstanding = "-10"
        else:
            if st == 0:
                newstanding = ""
            else:
                newstanding = "neut"
        print ('<td>%s</td>' % newstanding)
        # Standing
        if int(st) == 0:
            st = "neut"
        print ('<td>%s</td>' % st)
        # Size
        print ('<td style="text-align: right">%s</td>'
               % humane_empty(size))
        # Last seen
        print ('<td style="text-align: left">%s</td>'
               % lastseen)
        # MatarKB
        print ('<td style="text-align: right">%s</td>'
               % humane_empty(matarikbrank))
        # MaryKB
        print ('<td style="text-align: right">%s</td>'
               % humane_empty(marykbrank))
        # FWK
        print ('<td style="text-align: right">%s</td>'
               % humane_empty(fwk))
        # FWVP
        print ('<td style="text-align: right">%s</td>'
               % humane_empty(fwvp))
        print '</tr>'
    print ('<tr><td></td><td></td><td colspan="6">%s / %s (%.1f%%)</td></tr>'
           % (humane(totalsize), humane(amarr_size),
              (totalsize/float(amarr_size)*100)))
    print ('</table>')

def humane_empty(n):
    if n == 0:
        return ""
    else:
        return humane(n)

if __name__ == '__main__':
    main()

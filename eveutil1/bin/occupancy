#!/usr/bin/env python

from lib import characters
from lib import evedb

def main():
    api = characters.api()
    fws = api.map.FacWarSystems()
    for fac in ['Minmatar Republic', 'Amarr Empire',
                'Gallente Federation', 'Caldari State']:
        (original, own_occupied, hostile_occupied,
         contested) = occupancy(fac, fws)
        print "%-20s  %3i / %3i + %3i (%3i)" % (fac, own_occupied, original,
                                                hostile_occupied, contested)

def occupancy(faction, fws):
    original = 0
    own_occupied = 0
    hostile_occupied = 0
    contested = 0
    for system in fws.solarSystems:
        sysname = system.solarSystemName
        sovereign = sys2fac(sysname)
        if system.occupyingFactionName == '':
            occupator = sovereign
        else:
            occupator = system.occupyingFactionName
        if sovereign == faction:
            original += 1
            if occupator == faction:
                own_occupied += 1
        else:
            if occupator == faction:
                hostile_occupied += 1
        if occupator == faction and system.contested == 'True':
            contested += 1
    return original, own_occupied, hostile_occupied, contested

sys2facd = None
def sys2fac(sysname):
    global sys2facd
    if sys2facd is None:
        db = evedb.connect()
        c = db.cursor()
        c.execute("SELECT sys.solarsystemname, f.factionname "
                  "FROM mapsolarsystems sys "
                  "     INNER JOIN mapregions r "
                  "       ON sys.regionid = r.regionid "
                  "     INNER JOIN chrfactions f "
                  "       ON r.factionid = f.factionid")
        sys2facd = dict(c.fetchall())
    return sys2facd[sysname]

if __name__ == '__main__':
    main()

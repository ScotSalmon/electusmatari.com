#!/usr/bin/env python

import csv

import lib.evedb as evedb

SQL_DUMPS = [
    ('wcl_moon.csv', """
SELECT d.itemid, d.itemname, d.solarsystemid
    FROM mapdenormalize d
         INNER JOIN invgroups g
           ON d.groupid = g.groupid
         INNER JOIN mapsolarsystems s
           ON d.solarsystemid = s.solarsystemid
    WHERE g.groupname = 'Moon'
--    AND s.security < 0.85
"""),
    ('wcl_system.csv', """
SELECT solarsystemid, solarsystemname, security, regionid
FROM mapsolarsystems
"""),
    ('wcl_region.csv', """
SELECT regionid, regionname, factionid
FROM mapregions
"""),
    ('wcl_faction.csv', """
SELECT factionid, factionname
FROM chrfactions
"""),
    ('wcl_invflag.csv', """
SELECT flagid, flagname
FROM invflags
"""),
    ('wcl_invtype.csv', """
SELECT t.typeid,
       t.typename,
       (SELECT COALESCE(dta.valuefloat, dta.valueint)
        FROM dgmtypeattributes dta
             INNER JOIN dgmattributetypes dat
               ON dta.attributeid = dat.attributeid
        WHERE dta.typeid = t.typeid
          AND dat.attributename = 'techLevel')::integer AS techLevel,
       (SELECT COALESCE(dta.valuefloat, dta.valueint)
        FROM dgmtypeattributes dta
             INNER JOIN dgmattributetypes dat
               ON dta.attributeid = dat.attributeid
        WHERE dta.typeid = t.typeid
          AND dat.attributename = 'metaLevel')::integer AS metaLevel,
       (SELECT f.flagid
        FROM invflags f
        WHERE flagname = (CASE (SELECT de.effectname
                                FROM dgmtypeeffects dte
                                     INNER JOIN dgmeffects de
                                       ON dte.effectid = de.effectid
                                WHERE dte.typeid = t.typeid
                                  AND de.effectname IN ('hiPower', 'medPower',
                                                        'loPower', 'rigSlot',
                                                        'subSystem')

                                UNION

                                SELECT DISTINCT e.effectname
                                FROM invtypes mt
                                     INNER JOIN dgmtypeattributes ta
                                       ON mt.typeid = ta.typeid
                                     INNER JOIN dgmattributetypes at
                                       ON ta.attributeid = at.attributeid
                                     INNER JOIN invgroups g
                                       ON COALESCE(ta.valuefloat,
                                               ta.valueint)::int = g.groupid
                                     INNER JOIN invtypes gt
                                       ON g.groupid = gt.groupid
                                     INNER JOIN dgmtypeeffects te
                                       ON gt.typeid = te.typeid
                                     INNER JOIN dgmeffects e
                                       ON te.effectid = e.effectid
                                     WHERE at.attributename = 'launcherGroup'
                                       AND e.effectname IN ('hiPower',
                                                            'medPower',
                                                            'loPower',
                                                            'rigSlot',
                                                            'subSystem')
                                       AND mt.typeid = t.typeid

                                LIMIT 1)
                          WHEN 'hiPower' THEN 'HiSlot0'
                          WHEN 'medPower' THEN 'LoSlot0'
                          WHEN 'loPower' THEN 'MedSlot0'
                          WHEN 'rigSlot' THEN 'RigSlot0'
                          WHEN 'subSystem' THEN 'SubSystem0'
                          END)) AS defaultFlag
FROM invtypes t
""")
]

def main():
    db = evedb.connect()
    c = db.cursor()
    for (filename, sql) in SQL_DUMPS:
        c.execute(sql)
        w = csv.writer(file(filename, "w"))
        for row in c.fetchall():
            w.writerow(row)

if __name__ == '__main__':
    main()

#!/usr/bin/env python

import datetime

import psycopg2

from lib import characters
from lib import evedb

db = evedb.connect()
store = psycopg2.connect("host=localhost dbname=eve user=forcer")

REPUBLIC_REGIONS = ['Heimatar', 'Metropolis', 'Molden Heath',
                    'Great Wildlands', 'Derelik']

def main():
    api = characters.api()
    api_kills = api.map.Kills()
    api_jumps = api.map.Jumps()
    kills = dict((x.solarSystemID, (x.shipKills,
                                    x.factionKills,
                                    x.podKills))
                 for x in api_kills.solarSystems)
    jumps = dict((x.solarSystemID, x.shipJumps)
                 for x in api_jumps.solarSystems)
    timestamp = datetime.datetime.fromtimestamp(api_jumps.dataTime)
    c = store.cursor()
    for sysid in republic_system_ids():
        if sysid in kills:
            (ship, faction, pod) = kills[sysid]
        else:
            (ship, faction, pod) = (0, 0, 0)
        if sysid in jumps:
            shipjumps = jumps[sysid]
        else:
            shipjumps = 0
        c.execute("""
INSERT INTO republic_map (timestamp, systemid, shipjumps,
                          shipkills, factionkills, podkills)
VALUES (%s, %s, %s, %s, %s, %s)
""", (timestamp, sysid, shipjumps, ship, faction, pod))
    store.commit()

def republic_system_ids():
    c = db.cursor()
    c.execute("""
SELECT sys.solarSystemID
FROM mapSolarSystems sys
     INNER JOIN mapRegions r
       ON sys.regionID = r.regionID
WHERE r.regionName IN (%s)
""" % ", ".join(["%s"] * len(REPUBLIC_REGIONS)),
              REPUBLIC_REGIONS)
    return [x for (x,) in c.fetchall()]

main()

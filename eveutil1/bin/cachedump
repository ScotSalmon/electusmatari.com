#!/usr/bin/env python

import sys
sys.path.append("/home/forcer/Programs/Reverence/active/lib64/python2.6/site-packages/")

from reverence import blue
from lib import machonet

import pprint

def main():
    data = load(sys.argv[1])
    pprint.pprint(data)
    
def load(f):
    return convert(blue.marshal.Load(file(f, "rb").read()))

def convert(obj):
    try:
        t = machonet.macho2table(obj)
        return (obj.__class__.__name__,
                [t.header] + [tuple(x) for x in t.rows]
                #[dict(zip(t.header, [convert(col) for col in row]))
                #for row in t.rows]
                )
    except machonet.CoercionError:
        pass
    guid = getattr(obj, "__guid__", None)
    if guid is not None:
        if guid == "objectCaching.CachedObject":
            return ('objectCaching.CachedObject', convert(obj.GetObject()))
    if type(obj) is list:
        return [convert(elt) for elt in obj]
    elif type(obj) is tuple:
        return tuple(convert(elt) for elt in obj)
    elif type(obj) is dict:
        return dict((key, convert(val)) for (key, val) in obj.items())
    else:
        return obj

def table(header, rows):
    return [dict(zip(header, [convert(col) for col in row]))
            for row in rows]

if __name__ == '__main__':
    main()

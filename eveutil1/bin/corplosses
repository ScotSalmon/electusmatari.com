#!/usr/bin/env python

import csv
import datetime
import sys

from lib import evedb
from lib import characters, cache

db = evedb.connect()


def main():
    grd = characters.corp(configfile="/home/forcer/.grdkey",
                          cacheHandler=cache.FileCache("/tmp/forcer/eveapicache/"))
    (docsv, donpc) = (False, False)
    if "-a" in sys.argv:
        all = True
    else:
        all = False
    if "--csv" in sys.argv:
        docsv = True
        w = csv.writer(sys.stdout)
    if "--npc" in sys.argv:
        donpc = True
    for kill in get_kills(grd, all):
        if len([row for row in kill.attackers if row.characterID != 0]) > 0:
            isnpc = False
        else:
            isnpc = True
        if isnpc and not donpc:
            continue
        if not isnpc and donpc:
            continue
        if kill.victim.corporationName == 'Gradient':
            ts = datetime.datetime.utcfromtimestamp(kill.killTime)
            system = sysname(kill.solarSystemID)
            ship = typename(kill.victim.shipTypeID)
            if docsv:
                w.writerow(['loss', ship, kill.victim.characterName,
                            system, "2.0",
                            ts.strftime("%Y-%m-%d %H:%M"),
                            "1"])
            else:
                print("%s %s (%s, %s)" % (ts.strftime("%Y-%m-%d %H:%M"),
                                          kill.victim.characterName,
                                          system,
                                          ship))

def get_kills(corp, doall):
    lastKillID = None
    killlog = corp.KillLog()
    while True:
        for kill in killlog.kills:
            yield kill
            lastid = kill.killID
        try:
            killlog = corp.KillLog(beforeKillID=lastid)
        except:
            break

sysname_d = {}
def sysname(sysid):
    if sysid not in sysname_d:
        c = db.cursor()
        c.execute("select solarsystemname from mapsolarsystems "
                  "where solarsystemid = %s",
                  (sysid,))
        sysname_d[sysid] = c.fetchone()[0]
    return sysname_d[sysid]

typename_d = {}
def typename(typeid):
    if typeid not in typename_d:
        c = db.cursor()
        c.execute("select typename from invtypes "
                  "where typeid = %s",
                  (typeid,))
        typename_d[typeid] = c.fetchone()[0]
    return typename_d[typeid]

if __name__ == '__main__':
    main()

#!/usr/bin/env python

import sys

from lib import eveapi, evedb

db = evedb.connect()

def main():
    data = eveapi._Parser().Parse(file(sys.argv[1]), True)
    emit_contents(data.result.assets, 0)     

def emit_contents(contents, depth):
    for row in contents:
        line = "  " * depth
        if hasattr(row, "locationID"):
            line += "%s: " % location_name(row.locationID)
        line += "%s" % typename(row.typeID)
        if not row.singleton:
            line += " x %s" % humane(row.quantity)
        if row.flag:
            line += " (%s)" % flagname(row.flag)
        print line
        if hasattr(row, "contents"):
            emit_contents(row.contents, depth+1)

locations = {}
def location_name(locationID):
    if locationID not in locations:
        if locationID >= 66000000 and locationID < 67000000:
            locations[locationID] = station_name(locationID - 6000001)
        elif locationID >= 67000000 and locationID < 68000000:
            locations[locationID] = outpost_name(locationID - 6000000)
        else:
            locations[locationID] = (station_name(locationID)
                                     or system_name(locationID))
    if locations[locationID]:
        return locations[locationID]
    else:
        return str(locationID)

def system_name(systemid):
    c = db.cursor()
    c.execute("SELECT solarsystemname FROM mapsolarsystems WHERE solarsystemid = %s",
              (systemid,))
    name = c.fetchone()
    if name:
        return name[0]
    else:
        return None

def station_name(stationid):
    c = db.cursor()
    c.execute("SELECT stationname FROM stastations WHERE stationid = %s",
              (stationid,))
    name = c.fetchone()
    if name:
        return name[0]
    else:
        return None

types = {}
def typename(typeid):
    if typeid not in types:
        c = db.cursor()
        c.execute("SELECT typename FROM invtypes WHERE typeid = %s",
                  (typeid,))
        name = c.fetchone()
        if name:
            types[typeid] = name[0]
        else:
            types[typeid] = str(typeid)
    return types[typeid]

flags = {}
def flagname(flagid):
    if flagid not in flags:
        c = db.cursor()
        c.execute("SELECT flagname FROM invflags WHERE flagid = %s",
                  (flagid,))
        name = c.fetchone()
        if name:
            flags[flagid] = name[0]
        else:
            flags[flagid] = str(flagid)
    return flags[flagid]

def humane(num):
    if num < 0:
        sign = "-"
        num *= -1
    else:
        sign = ""
    if type(num) == float:
        s = "%.2f" % num
        prefix = s[:-3]
        result = s[-3:]
    else:
        s = "%i" % num
        prefix = s
        result = ""

    i = 0
    while len(prefix) > 3:
        result = "," + prefix[-3:] + result
        prefix = prefix[:-3]
    return sign + prefix + result

main()
